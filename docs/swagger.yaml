definitions:
  agent.Agent:
    properties:
      branch_id:
        type: string
      company_id:
        type: string
      created:
        type: string
      id:
        type: string
      updated:
        type: string
      user_id:
        type: string
    type: object
  branch.Branch:
    properties:
      agents:
        items:
          $ref: '#/definitions/agent.Agent'
        type: array
      company_id:
        type: string
      created:
        type: string
      id:
        type: string
      name:
        type: string
      updated:
        type: string
    type: object
  company.Company:
    properties:
      agents:
        items:
          $ref: '#/definitions/agent.Agent'
        type: array
      branches:
        items:
          $ref: '#/definitions/branch.Branch'
        type: array
      created:
        type: string
      id:
        type: string
      name:
        type: string
      updated:
        type: string
    type: object
  schemas.CompanyCreate:
    properties:
      name:
        type: string
    required:
    - name
    type: object
info:
  contact: {}
paths:
  /companies:
    get:
      consumes:
      - application/json
      description: Gets all companies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/company.Company'
            type: array
      summary: Gets all companies
      tags:
      - companies
    post:
      consumes:
      - application/json
      description: Create Company
      parameters:
      - description: Create Company
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/schemas.CompanyCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/company.Company'
            type: array
      summary: Create Company
      tags:
      - companies
  /companies/{id}:
    get:
      consumes:
      - application/json
      description: fetches company by id from database
      operationId: get-string-by-int
      parameters:
      - description: ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/company.Company'
            type: array
      summary: fetches company by id from database
      tags:
      - companies
swagger: "2.0"
